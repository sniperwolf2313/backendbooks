name: deploy (Elastic Beanstalk)

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "Nombre de la EB Application"
        required: true
        default: "demo-backend-app"
      env_name:
        description: "Nombre del EB Environment"
        required: true
        default: "demo-backend-env"
      versions_bucket:
        description: "Bucket S3 para versiones EB (output de infra)"
        required: true

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Gradle build (jar runnable)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build

      - name: Preparar bundle EB (application.jar + Procfile)
        run: |
          mkdir -p bundle
          cp build/libs/*-SNAPSHOT.jar bundle/application.jar
          echo "web: java -jar application.jar" > bundle/Procfile
          cd bundle && zip -r ../eb-bundle.zip . && cd ..

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Subir bundle a S3
        id: s3up
        run: |
          VERSION="build-${{ github.run_number }}-${{ github.sha }}"
          KEY="releases/${VERSION}.zip"
          aws s3 cp eb-bundle.zip "s3://${{ github.event.inputs.versions_bucket }}/${KEY}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "key=$KEY" >> $GITHUB_OUTPUT

      - name: Crear EB Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "${{ github.event.inputs.app_name }}" \
            --version-label "${{ steps.s3up.outputs.version }}" \
            --source-bundle S3Bucket=${{ github.event.inputs.versions_bucket }},S3Key=${{ steps.s3up.outputs.key }}

      - name: Actualizar Environment
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ github.event.inputs.env_name }}" \
            --version-label "${{ steps.s3up.outputs.version }}"

      - name: Hint de URL
        run: |
          echo "Abre el Environment en la consola de EB y prueba: /api/items"
